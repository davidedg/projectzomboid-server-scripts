#!/bin/bash

SCRIPT_DIR=$( readlink -f $( dirname -- "$0" ) )


BACKUPSAFEMARGINSECONDS=2
source $SCRIPT_DIR/00-functions
source $SCRIPT_DIR/00-globals
source $SCRIPT_DIR/backup-online-local


# Get date of the most recent db change in the save directory
MOSTRECENTFILE=$($PRIO find ~/Zomboid/Saves/Multiplayer/$PZINSTANCE/ -type f -name "*.db-journal" -printf '%T@\t%p\n' | perl -ane '@m=@F if ($F[0]>$m[0]); END{print $m[1];}') #'
MOSTRECENTTS=$(stat -c %Y "$MOSTRECENTFILE" 2>/dev/null || echo "0")
echo "Last Change: $(env TZ=$TIMEZONEDISPLAY date -d @$MOSTRECENTTS +'%Y-%m-%d %H:%M:%S')"


# Get date of most recent snapshot
LASTBACKUPDATE=$(~/bin/restic snapshots --json latest | jq -r '.[0].time')
LASTBACKUPTS=$(date -u -d "$LASTBACKUPDATE" +"%s")
echo "Last Backup: $(env TZ=$TIMEZONEDISPLAY date -d @$LASTBACKUPTS +'%Y-%m-%d %H:%M:%S')"


# Is current state already in latest backup?
BACKUPLAG=$(( LASTBACKUPTS - MOSTRECENTTS))
IS_RECENT=false
[[ $BACKUPLAG -gt $BACKUPSAFEMARGINSECONDS ]] && IS_RECENT=true
echo "Current state is backed up: $IS_RECENT"



# Get connected players (requires gamedig installed)
export players=$(connected_players)
echo "Players Connected: $players"


# Do not run if 0 players connected and last backup already ran and it is not a manual backup
if    [[ $players -eq 0 ]] \
   && $IS_RECENT \
   && [[ "$CRON" = "1" ]]; then
echo "No Players connected and last state already backed up - not running"
exit 0
fi

# Manual RUN -> remove marker to force a backup even if there are no players connected
if [[ ! "$CRON" = "1" ]]; then
echo "Manual Run - will run anyway"
fi



# Inform only if players are present; shorter notice if this is a manual run
if    [[ $players -gt 0 ]]; then
if [[ "$CRON" = "1" ]]; then
echo "n" | ~/$PZINSTANCE sd 'servermsg "LIVE backup in 30 seconds..."'
sleep 10
echo "n" | ~/$PZINSTANCE sd 'servermsg "LIVE backup in 20 seconds..."'
sleep 10
echo "n" | ~/$PZINSTANCE sd 'servermsg "LIVE backup in 10 seconds..."'
sleep 0.8
echo "n" | ~/$PZINSTANCE sd 'servermsg "LIVE backup in 9 seconds ..."'
sleep 0.8
echo "n" | ~/$PZINSTANCE sd 'servermsg "LIVE backup in 8 seconds ..."'
sleep 0.8
echo "n" | ~/$PZINSTANCE sd 'servermsg "LIVE backup in 7 seconds ..."'
sleep 0.8
echo "n" | ~/$PZINSTANCE sd 'servermsg "LIVE backup in 6 seconds ..."'
sleep 0.8
echo "n" | ~/$PZINSTANCE sd 'servermsg "LIVE backup in 5 seconds ..."'
sleep 0.8
echo "n" | ~/$PZINSTANCE sd 'servermsg "LIVE backup in 4 seconds ..."'
sleep 0.8
fi
echo "n" | ~/$PZINSTANCE sd 'servermsg "LIVE backup in 3 seconds ..."'
sleep 0.8
echo "n" | ~/$PZINSTANCE sd 'servermsg "LIVE backup in 2 seconds ..."'
sleep 0.8
echo "n" | ~/$PZINSTANCE sd 'servermsg "LIVE backup in 1 second ..."'
sleep 0.8
echo "n" | ~/$PZINSTANCE sd 'servermsg "ONLINE BACKUP STARTED"'
fi




# Invoke save+sync to try and force coherence in the backup (might be further improved with LVM snaps / xfs freeze / etc)
sync
echo "n" | ~/$PZINSTANCE sd 'save'
sync
~/bin/restic backup ~/Zomboid --exclude ~/Zomboid/Logs --exclude ~/log --exclude ~/Zomboid/backups/startup


if [[ $players -gt 0 ]]; then
echo "n" | ~/$PZINSTANCE sd 'servermsg "ONLINE BACKUP COMPLETED"'
$SCRIPT_DIR/show_time
fi
